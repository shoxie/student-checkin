generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  student
  teacher
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  name          String?
  role          Role
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  uid           String
  classIds      String[]       @db.ObjectId
  classes       Class[]        @relation(fields: [classIds], references: [id])
  attendences   Attendance[]
  notifications Notification[]
}

model Attendance {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime
  status    String
  class     Class    @relation(fields: [classId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  classId   String   @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Class {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  subject    String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  attendance Attendance[]
  startTime  String
  endTime    String
  day        Int
  studentIds String[]     @db.ObjectId
  students   User[]       @relation(fields: [studentIds], references: [id])
}

model ClassMaterial {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  type      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  message   String
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
}
